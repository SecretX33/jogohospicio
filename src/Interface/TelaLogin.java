/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;
import java.awt.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import BancoDados.DAO;
import Elementos.Jogador;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import com.intellij.uiDesigner.core.*;
import com.jgoodies.forms.factories.*;
import com.jgoodies.forms.layout.*;
import org.jdesktop.beansbinding.*;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;

/**
 *
 * @author User
 */
public class TelaLogin extends javax.swing.JFrame {
    public Jogador jogador;
    private int tipoTela;
    private final KeyListener loginKL;
    private final KeyListener registroKL;
    

    public TelaLogin() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(Menu.EXIT_ON_CLOSE);
        tipoTela=0; // 0 = login, 1 = registro
        
        loginKL = new KeyAdapter() {
        @Override
        public void keyReleased(KeyEvent e) {
            checkLoginCanProceed();
        }};
        
        registroKL = new KeyAdapter() {
        @Override
        public void keyReleased(KeyEvent e) {
            checkRegistroCanProceed();
        }};
        
        AddKeyListenersOnEvent();
        setVisible(true);
        /*jogador = new Jogador("abinhogameplay","amigodamariana","Abinho Gameplay");
        if(!DAO.checkIfUserExists(jogador.getUsuario())) 
        try {
            DAO.InserirJogador(jogador);
        } catch (SQLIntegrityConstraintViolationException ex) {
            Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        setVisible(false);
        Menu m = new Menu(jogador,0);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Gabriel
    private void initComponents() {
        tela = new JPanel();
        login = new JPanel();
        labelUsuarioLogin = new JLabel();
        labelSenhaLogin = new JLabel();
        tbUsuarioLogin = new JTextField();
        botaoLogar = new JButton();
        botaoRegistrarLogin = new JButton();
        labelLogin = new JLabel();
        tbSenhaLogin = new JPasswordField();
        registro = new JPanel();
        labelUsuarioRegistro = new JLabel();
        labelSenhaRegistro = new JLabel();
        tbUsuarioRegistro = new JTextField();
        botaoRegistrarRegistro = new JButton();
        labelApelidoRegistro = new JLabel();
        tbApelidoRegistro = new JTextField();
        labelRegistro = new JLabel();
        tbSenhaRegistro = new JPasswordField();
        botaoVoltar = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new Dimension(400, 300));
        Container contentPane = getContentPane();

        //======== tela ========
        {

            // JFormDesigner evaluation mark
            tela.setBorder(new javax.swing.border.CompoundBorder(
                new javax.swing.border.TitledBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0),
                    "JFormDesigner Evaluation", javax.swing.border.TitledBorder.CENTER,
                    javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    java.awt.Color.red), tela.getBorder())); tela.addPropertyChangeListener(new java.beans.PropertyChangeListener(){public void propertyChange(java.beans.PropertyChangeEvent e){if("border".equals(e.getPropertyName()))throw new RuntimeException();}});

            tela.setLayout(new CardLayout());

            //======== login ========
            {
                login.setMinimumSize(new Dimension(1, 1));

                //---- labelUsuarioLogin ----
                labelUsuarioLogin.setText("Usu\u00e1rio");

                //---- labelSenhaLogin ----
                labelSenhaLogin.setText("Senha");

                //---- botaoLogar ----
                botaoLogar.setText("Login");
                botaoLogar.setEnabled(false);
                botaoLogar.addActionListener(e -> botaoLogarActionPerformed(e));

                //---- botaoRegistrarLogin ----
                botaoRegistrarLogin.setText("Registrar");
                botaoRegistrarLogin.addActionListener(e -> botaoRegistrarLoginActionPerformed(e));

                //---- labelLogin ----
                labelLogin.setFont(new Font("Tahoma", Font.BOLD, 26));
                labelLogin.setForeground(new Color(80, 200, 40));
                labelLogin.setText("Login");

                //---- tbSenhaLogin ----
                tbSenhaLogin.addActionListener(e -> tbSenhaLoginActionPerformed(e));

                GroupLayout loginLayout = new GroupLayout(login);
                login.setLayout(loginLayout);
                loginLayout.setHorizontalGroup(
                    loginLayout.createParallelGroup()
                        .addGroup(loginLayout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addGroup(loginLayout.createParallelGroup()
                                .addComponent(labelUsuarioLogin)
                                .addComponent(labelSenhaLogin))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(loginLayout.createParallelGroup()
                                .addComponent(tbUsuarioLogin)
                                .addComponent(tbSenhaLogin))
                            .addGap(51, 51, 51))
                        .addGroup(loginLayout.createSequentialGroup()
                            .addGap(104, 104, 104)
                            .addComponent(labelLogin)
                            .addContainerGap(107, Short.MAX_VALUE))
                        .addGroup(GroupLayout.Alignment.TRAILING, loginLayout.createSequentialGroup()
                            .addGap(0, 31, Short.MAX_VALUE)
                            .addComponent(botaoRegistrarLogin, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(botaoLogar, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43))
                );
                loginLayout.setVerticalGroup(
                    loginLayout.createParallelGroup()
                        .addGroup(loginLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(labelLogin)
                            .addGap(29, 29, 29)
                            .addGroup(loginLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(labelUsuarioLogin)
                                .addComponent(tbUsuarioLogin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(loginLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(labelSenhaLogin)
                                .addComponent(tbSenhaLogin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(loginLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(botaoRegistrarLogin)
                                .addComponent(botaoLogar))
                            .addGap(36, 36, 36))
                );
            }
            tela.add(login, "card2");

            //======== registro ========
            {
                registro.setPreferredSize(new Dimension(286, 202));

                //---- labelUsuarioRegistro ----
                labelUsuarioRegistro.setText("Usu\u00e1rio");

                //---- labelSenhaRegistro ----
                labelSenhaRegistro.setText("Senha");

                //---- botaoRegistrarRegistro ----
                botaoRegistrarRegistro.setText("Registrar");
                botaoRegistrarRegistro.setEnabled(false);
                botaoRegistrarRegistro.addActionListener(e -> botaoRegistrarRegistroActionPerformed(e));

                //---- labelApelidoRegistro ----
                labelApelidoRegistro.setText("Apelido");

                //---- labelRegistro ----
                labelRegistro.setFont(new Font("Tahoma", Font.BOLD, 24));
                labelRegistro.setForeground(new Color(20, 20, 240));
                labelRegistro.setText("Registro");
                labelRegistro.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

                //---- botaoVoltar ----
                botaoVoltar.setText("Voltar");
                botaoVoltar.setMaximumSize(new Dimension(77, 23));
                botaoVoltar.setMinimumSize(new Dimension(77, 23));
                botaoVoltar.setPreferredSize(new Dimension(77, 23));
                botaoVoltar.addActionListener(e -> botaoVoltarActionPerformed(e));

                GroupLayout registroLayout = new GroupLayout(registro);
                registro.setLayout(registroLayout);
                registroLayout.setHorizontalGroup(
                    registroLayout.createParallelGroup()
                        .addGroup(registroLayout.createSequentialGroup()
                            .addGroup(registroLayout.createParallelGroup()
                                .addGroup(registroLayout.createSequentialGroup()
                                    .addGap(96, 96, 96)
                                    .addComponent(labelRegistro))
                                .addGroup(registroLayout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addGroup(registroLayout.createParallelGroup()
                                        .addGroup(registroLayout.createSequentialGroup()
                                            .addComponent(labelApelidoRegistro)
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tbApelidoRegistro, GroupLayout.PREFERRED_SIZE, 187, GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(registroLayout.createSequentialGroup()
                                            .addGroup(registroLayout.createParallelGroup()
                                                .addComponent(labelUsuarioRegistro)
                                                .addComponent(labelSenhaRegistro))
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(registroLayout.createParallelGroup()
                                                .addComponent(tbUsuarioRegistro, GroupLayout.PREFERRED_SIZE, 186, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(tbSenhaRegistro))))))
                            .addContainerGap(29, Short.MAX_VALUE))
                        .addGroup(GroupLayout.Alignment.TRAILING, registroLayout.createSequentialGroup()
                            .addContainerGap(34, Short.MAX_VALUE)
                            .addComponent(botaoVoltar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(botaoRegistrarRegistro, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)
                            .addGap(67, 67, 67))
                );
                registroLayout.setVerticalGroup(
                    registroLayout.createParallelGroup()
                        .addGroup(GroupLayout.Alignment.TRAILING, registroLayout.createSequentialGroup()
                            .addComponent(labelRegistro, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(registroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(labelUsuarioRegistro)
                                .addComponent(tbUsuarioRegistro, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addGroup(registroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(labelSenhaRegistro)
                                .addComponent(tbSenhaRegistro, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addGroup(registroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(labelApelidoRegistro)
                                .addComponent(tbApelidoRegistro, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(registroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(botaoRegistrarRegistro)
                                .addComponent(botaoVoltar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addContainerGap())
                );
            }
            tela.add(registro, "telaRegistro");
        }

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addComponent(tela, GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addComponent(tela, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
        );
        setSize(290, 230);
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void botaoRegistrarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRegistrarRegistroActionPerformed
        if(!String.valueOf(tbUsuarioRegistro.getText()).isEmpty() && 
           !String.valueOf(tbSenhaRegistro.getPassword()).isEmpty() && 
           !String.valueOf(tbApelidoRegistro.getText()).isEmpty())
        {
            if(DAO.checkIfUserExists(String.valueOf(tbUsuarioRegistro.getText())))
                JOptionPane.showMessageDialog(this, "Esse usuário já existe, tente outro nome.", "Erro ao cadastrar", JOptionPane.WARNING_MESSAGE);
            else{
                try{
                    DAO.InserirJogador(tbUsuarioRegistro.getText(), String.valueOf(tbSenhaRegistro.getPassword()), tbApelidoRegistro.getText());              
                    JOptionPane.showMessageDialog(this, "Usuário registrado com sucesso!", "Êxito", JOptionPane.INFORMATION_MESSAGE);
                    trocarTela();
                } catch(SQLIntegrityConstraintViolationException e){
                    JOptionPane.showMessageDialog(this, "Esse usuário já existe, tente outro nome.\n\n" + e, "Erro ao cadastrar", JOptionPane.WARNING_MESSAGE);
                }
                
            }
        }
        else JOptionPane.showMessageDialog(null, "Existem campos em branco, então não é possível realizar o cadastro.","Aviso", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_botaoRegistrarRegistroActionPerformed

    private void botaoRegistrarLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRegistrarLoginActionPerformed
        trocarTela();
    }//GEN-LAST:event_botaoRegistrarLoginActionPerformed
    
    private void botaoVoltarActionPerformed(ActionEvent e) {
        trocarTela();
    }
    
    private void botaoLogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLogarActionPerformed
        if(checkLoginCanProceed())
        {
            if(!DAO.verifyLogin(String.valueOf(tbUsuarioLogin.getText()),String.valueOf(tbSenhaLogin.getPassword()))){
                System.out.println("[Login] Erro ao logar, usuario ou senha incorretos.");
                JOptionPane.showMessageDialog(this, "Usuário ou senha incorretos, tente novamente.", "Erro ao logar", JOptionPane.WARNING_MESSAGE);
            }    
            else{
                System.out.println("[Login] Login realizado com sucesso.");
                jogador=DAO.getJogador(tbUsuarioLogin.getText());
                this.dispose();
                Menu m = new Menu(jogador,0);
            }
        }
        else JOptionPane.showMessageDialog(this, "Existem campos em branco, então não é possível realizar o cadastro.","Aviso", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_botaoLogarActionPerformed

    private void tbSenhaLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbSenhaLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbSenhaLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaLogin().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Gabriel
    private JPanel tela;
    private JPanel login;
    private JLabel labelUsuarioLogin;
    private JLabel labelSenhaLogin;
    private JTextField tbUsuarioLogin;
    private JButton botaoLogar;
    private JButton botaoRegistrarLogin;
    private JLabel labelLogin;
    private JPasswordField tbSenhaLogin;
    private JPanel registro;
    private JLabel labelUsuarioRegistro;
    private JLabel labelSenhaRegistro;
    private JTextField tbUsuarioRegistro;
    private JButton botaoRegistrarRegistro;
    private JLabel labelApelidoRegistro;
    private JTextField tbApelidoRegistro;
    private JLabel labelRegistro;
    private JPasswordField tbSenhaRegistro;
    private JButton botaoVoltar;
    // End of variables declaration//GEN-END:variables

    private boolean checkRegistroCanProceed(){
        if(String.valueOf(tbUsuarioRegistro.getText()).isEmpty() ||
           String.valueOf(tbSenhaRegistro.getPassword()).isEmpty() || 
           String.valueOf(tbApelidoRegistro.getText()).isEmpty()){
            botaoRegistrarRegistro.setEnabled(false);    
            return false;
        }
        else{
            botaoRegistrarRegistro.setEnabled(true);
            return true;
        }         
    }
    
    private void trocarTela(){
        tela.removeAll(); // Famoso cascade
        if(tipoTela==0){
            tbUsuarioRegistro.setText(tbUsuarioLogin.getText());
            tbUsuarioLogin.setText("");
            tbSenhaRegistro.setText(String.valueOf(tbSenhaLogin.getPassword()));
            tbSenhaLogin.setText("");
            //botaoRegistrarRegistro.setEnabled(false);
            checkRegistroCanProceed();
            tela.add(registro);
            tipoTela=1;
        }
        else{
            tbUsuarioLogin.setText(tbUsuarioRegistro.getText());
            tbUsuarioRegistro.setText("");
            tbSenhaRegistro.setText("");
            tbApelidoRegistro.setText("");
            //botaoLogar.setEnabled(false);
            checkLoginCanProceed();
            tela.add(login);
            tipoTela=0;
        }

        tela.repaint();
        tela.revalidate();   
    }
    
    private void AddKeyListenersOnEvent() {   
        tbUsuarioLogin.addKeyListener(loginKL);
        tbSenhaLogin.addKeyListener(loginKL);
        tbUsuarioRegistro.addKeyListener(registroKL);
        tbSenhaRegistro.addKeyListener(registroKL);
        tbApelidoRegistro.addKeyListener(registroKL);          
    }
    
    private boolean checkLoginCanProceed(){
        if(String.valueOf(tbUsuarioLogin.getText()).isEmpty() ||
           String.valueOf(tbSenhaLogin.getPassword()).isEmpty()){
            botaoLogar.setEnabled(false);
            return false;
        }
        else{
            botaoLogar.setEnabled(true);
            return true;
        }
    }
}
